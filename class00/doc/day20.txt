//★

# day20

Date 클래스
==> 날짜와 시간을 관리하는 클래스

	생성자 함수
	
		Date()
		==> 현재 시스템의 날짜와 시간을 이용해서 관리한다
		
		참고 ]
			이 클래스는 Calender 클래스가 version업 클래스이므로
			자바는 Calender 클래스의 사용을 권장한다.
			하지만 아직도 Data 클래스를 사용해야 하는 함수가 존재한다.
			따라서 알고는 있어야쥐~
			
(upGrade버전~!)			
			
Calender 클래스
==> Date 클래스를 버전업 시킨 클래스이다.

	생성방법
		Calendar cal = new Calendar(); ----x //-- 추상클래스여서 abstract
		
		Calendar cal = Calendar.getInstance(); ----o / static이면서 반환값이 자기 자신인
		
	주요함수 ]
	
		get(int field)
			==> 필요한 정보를 알려주는 함수
				이 함수는 int field에 알고자하는 내용을 알려주면
				그 값에 대해 알려주는 함수이다.
				
				참고 ]
					Calendar 클래스는 각각의 변수가 무엇을 알기위한 변수인지 알고 있어야 한다.
					(int field에 뭐 넣어야하는지 알고 있어야한단 말)
					
		getTime()
		==> Calendar 클래스를 Date 클래스로 변환하는 함수
		
		
			실무에서는 Calnedar 클래스를 이용해서 작업을 진행하다가
			필요하면 Date클래스로 변환해서 사용할 필요가 있다.
			
			예 ]
			
				Calnedar cal = Calendar.getInstace(); < 객체 만들어둔 다음에
					작업하다가...
				Date d  = cal.getTime(); < Date객체만들어줌
				
	참고 ]
		자바의 함수 이용 방법
		
			자바의 함수를 보면 문자열로 의미하는 내용을
			int 숫자로 입력해 달라는 함수가 많이 존재한다.
			이런 경우는 99% 자기 자신이 그 문자열의 의미와 숫자를 연결하는 변수를 가지고 있다. (필드정의)
			따라서 이 변수를 이용해서 처리하라는 의미가 된다.
			
			예 ]
			
				JFrame frame = new JFrame();
				JPanel panel = new JPanel();
				
				frame.add(panel, BorderLayout.CENTER);
				
---------------------------------------------------------------------------------------------------------
			
형식화 클래스
==> 주로 처리된 결과를 보기좋게 형식이 있는 문자열로 만들기(출력하기) 위한 목적으로 사용되어지는 클래스...

	1. DecimalFormat(Decimal..? 십진법의?)
		==> 처리결과 중 숫자를 형식화 된 문자열로 만들기 위한 클래스
		
		생성 방법 ]
		
			DicemalFormat(String pattern)을 주로 이용합니다.
			==> 어떤 모양으로 변환시킬지를, 패턴을 알려주면 만들어 준다.

			주요함수
			
				format(double number)
				==> 숫자를 원하는 형태의 문자열로 변환시켜주는 함수
				
			참고 ]
				패턴 지정법
					
					0 - 한자리 숫자를 의미하고 무효숫자도 표시하게 한다.
						예 ]
							0,010 이라는 숫자는 앞의 0은 무효숫자이므로 출력하게 되면 표현이 안된다.
							이 때 표현하는 방법
					
					# - 한자리 숫자를 의미하고 무효숫자는 표시하지 않는다.
					. - 소수의 위치를 알려준다.
					- - 음수일 경우 - 부호의 위치를 알려준다.
						예 ]
							음수의 경우
							-12,345
							12,345-
					, - 자릿수 구분문자 표시, 세 자리마다 표시
					E - 실수일 경우 지수형태로 표시하도록 한다.
					: - 패턴을 구분한다.(양수일 경우와 음수일 경우를 구분해서 처리할 경우 사용한다)
					% - 백분율을 표시하도록 한다
					/u00A4 - 화폐단위를 표시하도록 한다.
			
	2. SimpleDateFormat
		==> 데이터가 날짜인 경우 형식을 지정해서 문자열을 만들어 주는 클래스
		
		
	3. ChoiceFormat
		==> switch 등을 이용해야 하는 경우에 이것을 간소화 시키기 위한 방식
			즉, 특정범위의 값은 특정 문자열로 교체해서 출력하는 기능을 가진 클래스
			
			생성 방법 ]
				
				ChoiceFormat(double[] limits, String[] formats)
					double[] limits - 치환될 범위
					String[] formats - 치환할 문자
					
	4. MessageFormat
		==> 특정 문자열에 특정 위치의 내용만 변경되는 경우
			문자열 전체를 만들지 않고 변경되는 내용만 변환시켜서 하나의 문자열을 만들어내는 클래스이다.
			
			예를 들자면 앞으로 공부할 오라클에서 데이터를 입력할 경우
			
			"INSERT INTO member VALUSE(1001, '전은석', 'euns', 'euns_jun@naver.com')"
			"INSERT INTO member VALUSE(1001, '윤요셉', 'joseph', 'joseph@increpas.com')"
			"INSERT INTO member VALUSE(1001, '유병욱', 'wook', 'wook@increaps.com')"
			"INSERT INTO member VALUSE(1001, '오혜찬', 'chan', 'chan@increpas.com')"
			
			이런 문자열을 여러개 만들 경우
			처음부터 다시 만들어야 하는 불편함이 있다.
			이것을 해결하는 클래스가 MessageFormat 클래스이다.
			
			참고 함수
			
				parse(String source)
				==> 주어진 문자열 중에서 실제 변화되는 데이터부분만 알아내는 함수
				
---------------------------------------------------------------------------------------------------------




















