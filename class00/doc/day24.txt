//★★
# day24

스트림(Stream)
==> 자바는 외부장치와 데이터를 주고 받는 방법을 하나로 통일시켜 놓았다.
	그 방법이 Stream이다.
	
	스트림은 쉽게 생각해서 빨대라고 생각하면 된다.
	
	즉, 빨대(스트림)을 데이터를 주고 받을 외부장치에 꽂고 빨대를 빨기만하면(같은 함수를 이용하면...)
	외부장치의 데이터가 들어온다.
	
	참고 ]
		스트림은 단방향이다.
		즉, 하나의 스트림은 한 방향으로만 데이터를 보낼 수 있다.
		만약 같은 외부장치에 데이터를 주기도 하고 받길 원한다면 스트림은 두 개가 필요하다.
		
	스트림의 종류 ]
		1. 프로그램으로 데이터가 들어오는 방향
			InputStream, Reader
		2. 프로그램에서 데이터가 나가는 방향
			OutputStream, Writer
			
	데이터의 양에 의한 스트림의 종류 ] 
	
		1. byte 단위
			InputStream, OutputStream
			==> 속도는 조금 느리다.
				기계어 처리도 가능하다.
		2. char 단위
			Reader, Writer
			==> 속도는 조금 빠르다.
				오직 문자만 처리 가능하다.
		
	상대방의 종류에 따른 스트림의 종류 ]
	
		1. 타켓 스트림 (기본 스트림)
			==> 외부 장치에 직접 연결되는 스트림
		2. 필터 스트림 (보조 스트림)
			==> 스트림의 성능 향상, 개발자의 편의를 위해서
				스트림에 연결되는 스트림
		
		참고 ]
			반드시 기본 스트림은 존재해야 하고
			필요에 따라서 필터 스트림을 연결해서 사용해야한다.
			
---------------------------------------------------------------------------------------------------
byte단위 스트림
1. InputStream
	
	기본 함수 ]
	
		1) int read()
			==> 오직 한 문자(1byte)만 읽어들이는 함수
				반환값 - 읽은문자
				
		2) int read(byte[] b)  |오버로딩
			==> 여러바이트를 읽어들이는 함수
				읽은 결과는 byte[] b가 기억하게 되고
				반환값 - 읽은 데이터의 갯수(바이트 수)
		
		3) int read(byte[] b, int off, int len)
			==> 여러바이트를 읽어들이는 함수
				배열의 지정한 위치부터 지정한 갯수만큼만 읽어준다.
				반환값 - 읽은 데이터의 갯수(바이트 수)


2.FileInputStream
	==> 파일에 연결되는 입력용 스트림(파일의 내용 읽어오는 스트림)
	
	생성방법 ]
		FileInputStream(String name)
		==> Stream을 연결할 파일의 이름을 이용해서 스트림을 연결한다. / / / 패키지/주소/이름~ 이렇게 씀
	
		FileInputStream(File file)
		==> 파일 객체를 이용해서 스트림을 연결하는 방법
	
		이런 것도 있더라~
		 + FileInputStream(FileDescriptor fdObj) - 파일의 정보가 기술된 클래스 정의된 걸 매개변수로~
		 
	
3. FileOutputStream
	==> 파일로 연결된 내보내는 방향의 스트림이다.
	
	이 클래스를 이용해서 OutputStream의 기본 함수를 학습할 수 있따.
	
	기본 함수 ]
	
		void write(int b)
		==> 한글자만 내보내는 함수
		
		void write(byte[] b)
		==> 여러글자를 내보내는 함수
		
		void write(byte[] b, int off, int len)
		==> 여러 글자중에서 지정한 부분만 내보내는 함수
		
			int off = 내보낼 시작 위치
			int len = 내보낼 데이터 갯수
			
			
-------------------------------------------------------------------------------------------------------
File
== 이것은 스트림은 아니다.
	(데이터를 입력, 출력하는 기능이 없다.)
	다만 우리가 외부장치중에서 가장 많이 사용하는 외부장치가 파일이다 보니
	그 파일에 대한 정보를 처리하기 위한 클래스...
	
	생성방법 ]
		File(String pathname)
		==> 파일의 경로와 이름을 지정해서 만드는 방법
		
		File(String parent, String child)
		==>	파일의  경로와 이름을 따로 지정해서 만드는 방법
			parent : 상위폴더...
		
		File(File parent, String child)	
		==>	파일의 정보를 이용하고 파일의 이름만 다시 지정해서 만드는 방법
		
		참고 ]
			자바에서는 폴더 자체만도 파일로 인정한다.
			
			예 ] 
				File f =new File("D:\\class");
				
		File(URI uri)
		
			참고함수
				1. 정보를 알아내는 함수
					getName() - 파일 이름
					getParent()	- 폴더 이름
					exist()	- 파일의 존재여부
					length() - 파일의 크기
					....
				
				2. 외부작업을 하기 위한 함수
					==> 데이터 입출력 이외에 파일 전체에 대해서 작업을 할 수 있는 함수들...
					delet() - 파일 솩제
					mkdir() - 폴더 생성( 하나만 )
					mkdirs() - 폴더 생성( 계층으로 )
					renameTo() - 파일 이름 변경
					list() - 폴더에 있는 파일의 목록
					....
			
			참고
				
				String[] list() - 이름만 알아낸다.
				File[] listFiles() - 파일의 정보를 알아낸다. ==> 일반적인 파일의 목록을 알아낸다.
				
				String[] list(FilenameFilter filter)
				File[] listFiles(FileFilter filter)
				==> 필터링을 해서 리스트를 구할 수 있다.
				
			
-----------------------------------------------------------------------------------------------------

필터 스트림
	==> 1. 기본 스트림(타겟 스트림)에 기능을 추가한다던지
		2. 사용자에게 편의를 제공하기 위한 보조적인 기능의 스트림
		
		주의 사항 ]
			반드시 타켓 스트림(기본 스트림)이 존재해야 하고
			필터 스트림(보조스트림)은 필요에 따라서 연결해서 사용하면 된다.
			
		참고 ]
			필터스트림 역시 방향이 있다. 반드시 같은 방향끼리만 연결이 된다.
			
***
1. BufferdInputStream/BufferedOutpuStream
	==>	사용자 편의 기능x 대신 스트림의 성능을 향상시키는 역할을 한다.
		버퍼에 데이터를 모았다가 한번에 처리하는 기능이 추가된 스트림
		
		
					
	*****
	주요함수 ]
		
		flush()
		==> 강제로 버퍼에 올려진 데이터를 가져오는 함수 (다 안채워졌어도...)
		
2. DataInputStream/DataOutputStream
	==> 솔까말 많이 안씀. 기능 향상x, 편의성을 위해
		보통 스트림은 반드시 byte[]로만 데이터를 처리해야하는데,
		문자 데이터 아닌 다른 형태의 데이터는 문제가 있을 수 있다.
		==> 자바의 데이터타입을 byte[] 변환하지 않고 직접 외부장치로 입출력하는 기능을 추가했음.	
			
		
		잘 안쓰는 이유?
			DataOutputStream을 이용한 경우는 반드시 DataInput으로만 받아야 한다.
			순서가 지켜져야 한다.
			(저장할 때 int, float, String으로 저장했다면
				--> 받을 때도 int, float, String으로 받아야 한다.)
